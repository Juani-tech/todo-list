(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>d});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([e.id,"body {\n\tmargin: 0;\n\tpadding: 0;\n\tmin-height: 100vh;\n\twidth: 100%;\n\tfont-family: Arial, sans-serif;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\nheader {\n\tbackground-color: #333;\n\tcolor: #fff;\n\tpadding: 1rem;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\nheader > h1 {\n\tmargin: 0;\n}\n\nheader > nav {\n\tmargin-right: 5rem;\n}\nheader > nav > ul {\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tgap: 1rem;\n}\n\n#content {\n\tflex: 1;\n\tpadding: 1rem;\n}\n#add-project-button {\n\tcursor: pointer;\n}\n\n/* Dropdown Button */\n.dropbtn, #add-project-button {\n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 16px;\n\tfont-size: 16px;\n\tborder: none;\n  }\n  \n  /* The container <div> - needed to position the dropdown content */\n  .dropdown {\n\tposition: relative;\n\tdisplay: inline-block;\n  }\n  \n  /* Dropdown Content (Hidden by Default) */\n  .dropdown-content {\n\tdisplay: none;\n\tposition: absolute;\n\tbackground-color: #f1f1f1;\n\tmin-width: 160px;\n\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n\tz-index: 1;\n  }\n  \n  /* Links inside the dropdown */\n  .dropdown-content a {\n\tcolor: black;\n\tpadding: 12px 16px;\n\ttext-decoration: none;\n\tdisplay: block;\n  }\n  \n  /* Change color of dropdown links on hover */\n  .dropdown-content a:hover {background-color: #ddd;}\n  \n  /* Show the dropdown menu on hover */\n  .dropdown:hover .dropdown-content {display: block;}\n  \n  /* Change the background color of the dropdown button when the dropdown content is shown */\n  .dropdown:hover .dropbtn {background-color: #3e8e41;}\n\n\n\n  /* */\n\n.add-project-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n\n}\n\n.task-container, .new-task-form {\n\tborder: 1px solid black;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tpadding: 0.5rem;\n}\n\n.new-task-button { \n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 10px 20px;\n\tfont-size: 16px;\n\t/* margin: 4px 2px; */\n\tcursor: pointer;\n\tborder: none;\n\tborder-radius: 5px;\n}\n.add-task-buttons-container {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-top: 1rem;\n}\nbutton {\n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 10px 20px;\n\tfont-size: 16px;\n\tmargin: 4px 2px;\n\tcursor: pointer;\n\tborder: none;\n\tborder-radius: 5px;\n}\n\n.new-task-button {\n\tmargin: 0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;CACC,SAAS;CACT,UAAU;CACV,iBAAiB;CACjB,WAAW;CACX,8BAA8B;CAC9B,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,sBAAsB;CACtB,WAAW;CACX,aAAa;CACb,aAAa;CACb,8BAA8B;CAC9B,mBAAmB;AACpB;;AAEA;CACC,SAAS;AACV;;AAEA;CACC,kBAAkB;AACnB;AACA;CACC,gBAAgB;CAChB,UAAU;CACV,SAAS;CACT,aAAa;CACb,SAAS;AACV;;AAEA;CACC,OAAO;CACP,aAAa;AACd;AACA;CACC,eAAe;AAChB;;AAEA,oBAAoB;AACpB;CACC,yBAAyB;CACzB,YAAY;CACZ,aAAa;CACb,eAAe;CACf,YAAY;EACX;;EAEA,kEAAkE;EAClE;CACD,kBAAkB;CAClB,qBAAqB;EACpB;;EAEA,yCAAyC;EACzC;CACD,aAAa;CACb,kBAAkB;CAClB,yBAAyB;CACzB,gBAAgB;CAChB,4CAA4C;CAC5C,UAAU;EACT;;EAEA,8BAA8B;EAC9B;CACD,YAAY;CACZ,kBAAkB;CAClB,qBAAqB;CACrB,cAAc;EACb;;EAEA,4CAA4C;EAC5C,2BAA2B,sBAAsB,CAAC;;EAElD,oCAAoC;EACpC,mCAAmC,cAAc,CAAC;;EAElD,0FAA0F;EAC1F,0BAA0B,yBAAyB,CAAC;;;;EAIpD,IAAI;;AAEN;CACC,aAAa;CACb,sBAAsB;CACtB,SAAS;;AAEV;;AAEA;CACC,uBAAuB;CACvB,kBAAkB;CAClB,aAAa;CACb,eAAe;AAChB;;AAEA;CACC,yBAAyB;CACzB,YAAY;CACZ,kBAAkB;CAClB,eAAe;CACf,qBAAqB;CACrB,eAAe;CACf,YAAY;CACZ,kBAAkB;AACnB;AACA;CACC,aAAa;CACb,8BAA8B;CAC9B,mBAAmB;CACnB,gBAAgB;AACjB;AACA;CACC,yBAAyB;CACzB,YAAY;CACZ,kBAAkB;CAClB,eAAe;CACf,eAAe;CACf,eAAe;CACf,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,SAAS;AACV",sourcesContent:["body {\n\tmargin: 0;\n\tpadding: 0;\n\tmin-height: 100vh;\n\twidth: 100%;\n\tfont-family: Arial, sans-serif;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\nheader {\n\tbackground-color: #333;\n\tcolor: #fff;\n\tpadding: 1rem;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\nheader > h1 {\n\tmargin: 0;\n}\n\nheader > nav {\n\tmargin-right: 5rem;\n}\nheader > nav > ul {\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tgap: 1rem;\n}\n\n#content {\n\tflex: 1;\n\tpadding: 1rem;\n}\n#add-project-button {\n\tcursor: pointer;\n}\n\n/* Dropdown Button */\n.dropbtn, #add-project-button {\n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 16px;\n\tfont-size: 16px;\n\tborder: none;\n  }\n  \n  /* The container <div> - needed to position the dropdown content */\n  .dropdown {\n\tposition: relative;\n\tdisplay: inline-block;\n  }\n  \n  /* Dropdown Content (Hidden by Default) */\n  .dropdown-content {\n\tdisplay: none;\n\tposition: absolute;\n\tbackground-color: #f1f1f1;\n\tmin-width: 160px;\n\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n\tz-index: 1;\n  }\n  \n  /* Links inside the dropdown */\n  .dropdown-content a {\n\tcolor: black;\n\tpadding: 12px 16px;\n\ttext-decoration: none;\n\tdisplay: block;\n  }\n  \n  /* Change color of dropdown links on hover */\n  .dropdown-content a:hover {background-color: #ddd;}\n  \n  /* Show the dropdown menu on hover */\n  .dropdown:hover .dropdown-content {display: block;}\n  \n  /* Change the background color of the dropdown button when the dropdown content is shown */\n  .dropdown:hover .dropbtn {background-color: #3e8e41;}\n\n\n\n  /* */\n\n.add-project-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n\n}\n\n.task-container, .new-task-form {\n\tborder: 1px solid black;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tpadding: 0.5rem;\n}\n\n.new-task-button { \n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 10px 20px;\n\tfont-size: 16px;\n\t/* margin: 4px 2px; */\n\tcursor: pointer;\n\tborder: none;\n\tborder-radius: 5px;\n}\n.add-task-buttons-container {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-top: 1rem;\n}\nbutton {\n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 10px 20px;\n\tfont-size: 16px;\n\tmargin: 4px 2px;\n\tcursor: pointer;\n\tborder: none;\n\tborder-radius: 5px;\n}\n\n.new-task-button {\n\tmargin: 0;\n}"],sourceRoot:""}]);const d=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=a[s]||0,p="".concat(s," ").concat(l);a[s]=l+1;var A=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var C=r(u,o);o.byIndex=d,n.splice(d,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=t(a[i]);n[d].references--}for(var c=o(e,r),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),o=t(825),r=t.n(o),a=t(659),i=t.n(a),d=t(56),c=t.n(d),s=t(540),l=t.n(s),p=t(113),A=t.n(p),u=t(208),C={};C.styleTagTransform=A(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),n()(u.A,C),u.A&&u.A.locals&&u.A.locals;class m{constructor(e){this.title=e,this.tasks=[]}#e(e){return this.tasks.forEach((n=>{if(n.title===e)return!0})),!1}addTask(e){this.#e(e.title)||this.tasks.push(e)}removeTask(e){this.tasks=this.tasks.filter((n=>n.title!==e))}getTask(e){return this.tasks.find((n=>n.title===e))}}class h{constructor(e,n,t,o,r,a){this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.notes=r,this.checklist=a}get attributes(){return{title:this.title,description:this.description,dueDate:this.dueDate,priority:this.priority,notes:this.notes,checklist:this.checklist}}}function b(e){const n=document.querySelector(".dropdown-content"),t=document.createElement("a");t.addEventListener("click",(()=>{f(e)})),t.setAttribute("class",`${e.title}-dropdown`),t.setAttribute("href","#"),t.innerHTML=e.title,n.appendChild(t)}function f(e){const n=document.getElementById("content");n.innerHTML="";const t=document.createElement("h2");t.style="\n        text-align: center;\n    ",t.innerHTML=e.title,n.appendChild(t);const o=document.createElement("div");o.style="\n        display: grid;\n        grid-template: auto / repeat(4, 1fr);\n        gap: 1rem;\n    ";for(let n=0;n<e.tasks.length;n++){const t=document.createElement("div");t.setAttribute("class","task-container");const r=document.createElement("button"),a=document.createElement("button"),i=document.createElement("button"),d=document.createElement("p"),c=document.createElement("p"),s=document.createElement("p");d.innerHTML=e.tasks[n].title,c.innerHTML="Due date: "+e.tasks[n].dueDate,s.innerHTML="Priority: "+e.tasks[n].priority,r.innerHTML="Remove",a.innerHTML="See",i.innerHTML="Edit",a.setAttribute("class","see-task-button"),r.setAttribute("class","remove-task-button"),i.setAttribute("class","edit-task-button"),r.addEventListener("click",(()=>{e.removeTask(d.innerHTML);const r=JSON.parse(localStorage.getItem(e.title));r.tasks.splice(n,1),localStorage.setItem(e.title,JSON.stringify(r)),o.removeChild(t)})),a.addEventListener("click",(()=>{t.innerHTML="";const o=document.createElement("p"),d=document.createElement("p"),c=document.createElement("p"),s=document.createElement("p"),l=document.createElement("p"),p=document.createElement("p"),A=document.createElement("button");o.innerHTML="Title: "+e.tasks[n].title,d.innerHTML="Description: "+e.tasks[n].description,c.innerHTML="Due date: "+e.tasks[n].dueDate,s.innerHTML="Priority: "+e.tasks[n].priority,l.innerHTML="Notes: "+e.tasks[n].notes,p.innerHTML="Checklist: "+e.tasks[n].checklist,A.innerHTML="Hide",t.appendChild(o),t.appendChild(d),t.appendChild(c),t.appendChild(s),t.appendChild(l),t.appendChild(p),t.appendChild(A),A.addEventListener("click",(()=>{t.innerHTML="",t.appendChild(o),t.appendChild(c),t.appendChild(s),t.appendChild(a),t.appendChild(i),t.appendChild(r)}))})),i.addEventListener("click",(()=>{t.innerHTML="";const o=document.createElement("label"),r=document.createElement("input"),a=document.createElement("label"),i=document.createElement("input"),c=document.createElement("label"),s=document.createElement("input"),l=document.createElement("label"),p=document.createElement("input"),A=document.createElement("label"),u=document.createElement("input"),C=document.createElement("label"),m=document.createElement("input"),b=document.createElement("button"),k=document.createElement("button");r.value=e.tasks[n].title,i.value=e.tasks[n].dueDate,s.value=e.tasks[n].priority,p.value=e.tasks[n].description,u.value=e.tasks[n].notes,m.value=e.tasks[n].checklist,o.innerHTML="Title: ",a.innerHTML="Due Date: ",c.innerHTML="Priority: ",l.innerHTML="Description: ",A.innerHTML="Notes: ",C.innerHTML="Checklist: ",b.innerHTML="Save",k.innerHTML="Cancel",b.setAttribute("class","save-button"),k.setAttribute("class","cancel-button"),b.addEventListener("click",(()=>{e.removeTask(d.innerHTML);const n=new h(r.value,p.value,i.value,s.value,u.value,m.value.split(","));e.addTask(n),f(e)})),k.addEventListener("click",(()=>{f(e)})),t.appendChild(o),t.appendChild(r),t.appendChild(a),t.appendChild(i),t.appendChild(c),t.appendChild(s),t.appendChild(l),t.appendChild(p),t.appendChild(A),t.appendChild(u),t.appendChild(C),t.appendChild(m),t.appendChild(b),t.appendChild(k)})),t.appendChild(d),t.appendChild(c),t.appendChild(s),t.appendChild(a),t.appendChild(i),t.appendChild(r),o.appendChild(t)}!function(e,n){const t=document.createElement("button");t.setAttribute("class","new-task-button"),t.innerHTML="New Task",t.addEventListener("click",(()=>{t.parentNode.removeChild(t);const o=document.createElement("div");o.setAttribute("class","task-container");const r=document.createElement("form");r.setAttribute("class","new-task-form");const a=document.createElement("label"),i=document.createElement("input"),d=document.createElement("label"),c=document.createElement("input"),s=document.createElement("label"),l=document.createElement("input"),p=document.createElement("label"),A=document.createElement("input"),u=document.createElement("label"),C=document.createElement("input"),m=document.createElement("label"),b=document.createElement("input"),k=document.createElement("div"),v=document.createElement("button"),g=document.createElement("button");a.innerHTML="Title: ",i.setAttribute("required",""),d.innerHTML="Due Date (YYYY-MM-DD): ",c.setAttribute("required",""),c.setAttribute("type","date"),c.setAttribute("pattern","d{4}-d{2}-d{2}"),s.innerHTML="Priority: ",l.setAttribute("required",""),p.innerHTML="Description: ",u.innerHTML="Notes: ",m.innerHTML="Checklist: ",v.innerHTML="Add Task",v.setAttribute("type","submit"),g.innerHTML="Cancel",k.setAttribute("class","add-task-buttons-container"),g.setAttribute("class","cancel-button"),v.setAttribute("class","add-task-button"),r.addEventListener("submit",(t=>{t.preventDefault();const r=new h(i.value,A.value,c.value,l.value,C.value,b.value.split(",")),a=localStorage.getItem(e.title),d=JSON.parse(a);d.tasks.push(r),localStorage.setItem(e.title,JSON.stringify(d)),e.addTask(r),n.removeChild(o),f(e)})),g.addEventListener("click",(()=>{n.removeChild(o),n.appendChild(t)})),k.appendChild(v),k.appendChild(g),r.appendChild(a),r.appendChild(i),r.appendChild(d),r.appendChild(c),r.appendChild(s),r.appendChild(l),r.appendChild(p),r.appendChild(A),r.appendChild(u),r.appendChild(C),r.appendChild(m),r.appendChild(b),r.appendChild(k),o.appendChild(r),n.appendChild(o)})),n.appendChild(t)}(e,o),o.setAttribute("class","project-container"),n.appendChild(o)}const k=document.getElementById("add-project-button"),v=document.getElementById("add-project-form"),g=document.getElementById("close-new-project-button"),E=document.getElementById("add-project-dialog"),B=document.getElementById("project-title");k.addEventListener("click",(()=>{E.showModal()})),v.addEventListener("submit",(e=>{if(e.preventDefault(),""===B.value)return;const n=new m(B.value);localStorage.setItem(B.value,JSON.stringify(n)),b(n),E.close(),v.reset()})),g.addEventListener("click",(()=>{E.close()})),Object.keys(localStorage).forEach((e=>{const n=JSON.parse(localStorage.getItem(e)),t=new m(n.title);t.tasks=n.tasks,b(t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L0IsU0FBU2pCLElBQ1YsTUFBTWdDLEVBQVU3RyxLQUFLNEgsTUFBTUMsYUFBYUMsUUFBUWpELElBQzFDa0MsRUFBYSxJQUFJdEIsRUFBUW9CLEVBQVFsQixPQUN2Q29CLEVBQVduQixNQUFRaUIsRUFBUWpCLE1BQzNCZ0IsRUFBcUJHLEVBQVcsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL0RPTV9tYW5pcHVsYXRpb24uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtaW4taGVpZ2h0OiAxMDB2aDtcblx0d2lkdGg6IDEwMCU7XG5cdGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcblx0ZGlzcGxheTogZmxleDtcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuaGVhZGVyIHtcblx0YmFja2dyb3VuZC1jb2xvcjogIzMzMztcblx0Y29sb3I6ICNmZmY7XG5cdHBhZGRpbmc6IDFyZW07XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuaGVhZGVyID4gaDEge1xuXHRtYXJnaW46IDA7XG59XG5cbmhlYWRlciA+IG5hdiB7XG5cdG1hcmdpbi1yaWdodDogNXJlbTtcbn1cbmhlYWRlciA+IG5hdiA+IHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRnYXA6IDFyZW07XG59XG5cbiNjb250ZW50IHtcblx0ZmxleDogMTtcblx0cGFkZGluZzogMXJlbTtcbn1cbiNhZGQtcHJvamVjdC1idXR0b24ge1xuXHRjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qIERyb3Bkb3duIEJ1dHRvbiAqL1xuLmRyb3BidG4sICNhZGQtcHJvamVjdC1idXR0b24ge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDRBQTZEO1xuXHRjb2xvcjogd2hpdGU7XG5cdHBhZGRpbmc6IDE2cHg7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0Ym9yZGVyOiBub25lO1xuICB9XG4gIFxuICAvKiBUaGUgY29udGFpbmVyIDxkaXY+IC0gbmVlZGVkIHRvIHBvc2l0aW9uIHRoZSBkcm9wZG93biBjb250ZW50ICovXG4gIC5kcm9wZG93biB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIFxuICAvKiBEcm9wZG93biBDb250ZW50IChIaWRkZW4gYnkgRGVmYXVsdCkgKi9cbiAgLmRyb3Bkb3duLWNvbnRlbnQge1xuXHRkaXNwbGF5OiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG5cdG1pbi13aWR0aDogMTYwcHg7XG5cdGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xuXHR6LWluZGV4OiAxO1xuICB9XG4gIFxuICAvKiBMaW5rcyBpbnNpZGUgdGhlIGRyb3Bkb3duICovXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xuXHRjb2xvcjogYmxhY2s7XG5cdHBhZGRpbmc6IDEycHggMTZweDtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcbiAgfVxuICBcbiAgLyogQ2hhbmdlIGNvbG9yIG9mIGRyb3Bkb3duIGxpbmtzIG9uIGhvdmVyICovXG4gIC5kcm9wZG93bi1jb250ZW50IGE6aG92ZXIge2JhY2tncm91bmQtY29sb3I6ICNkZGQ7fVxuICBcbiAgLyogU2hvdyB0aGUgZHJvcGRvd24gbWVudSBvbiBob3ZlciAqL1xuICAuZHJvcGRvd246aG92ZXIgLmRyb3Bkb3duLWNvbnRlbnQge2Rpc3BsYXk6IGJsb2NrO31cbiAgXG4gIC8qIENoYW5nZSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgZHJvcGRvd24gYnV0dG9uIHdoZW4gdGhlIGRyb3Bkb3duIGNvbnRlbnQgaXMgc2hvd24gKi9cbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wYnRuIHtiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO31cblxuXG5cbiAgLyogKi9cblxuLmFkZC1wcm9qZWN0LWZvcm0ge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRnYXA6IDFyZW07XG5cbn1cblxuLnRhc2stY29udGFpbmVyLCAubmV3LXRhc2stZm9ybSB7XG5cdGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuXHRib3JkZXItcmFkaXVzOiA1cHg7XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuLm5ldy10YXNrLWJ1dHRvbiB7IFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDRBQTZEO1xuXHRjb2xvcjogd2hpdGU7XG5cdHBhZGRpbmc6IDEwcHggMjBweDtcblx0Zm9udC1zaXplOiAxNnB4O1xuXHQvKiBtYXJnaW46IDRweCAycHg7ICovXG5cdGN1cnNvcjogcG9pbnRlcjtcblx0Ym9yZGVyOiBub25lO1xuXHRib3JkZXItcmFkaXVzOiA1cHg7XG59XG4uYWRkLXRhc2stYnV0dG9ucy1jb250YWluZXIge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdG1hcmdpbi10b3A6IDFyZW07XG59XG5idXR0b24ge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDRBQTZEO1xuXHRjb2xvcjogd2hpdGU7XG5cdHBhZGRpbmc6IDEwcHggMjBweDtcblx0Zm9udC1zaXplOiAxNnB4O1xuXHRtYXJnaW46IDRweCAycHg7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0Ym9yZGVyOiBub25lO1xuXHRib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi5uZXctdGFzay1idXR0b24ge1xuXHRtYXJnaW46IDA7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0NBQ0MsU0FBUztDQUNULFVBQVU7Q0FDVixpQkFBaUI7Q0FDakIsV0FBVztDQUNYLDhCQUE4QjtDQUM5QixhQUFhO0NBQ2Isc0JBQXNCO0FBQ3ZCOztBQUVBO0NBQ0Msc0JBQXNCO0NBQ3RCLFdBQVc7Q0FDWCxhQUFhO0NBQ2IsYUFBYTtDQUNiLDhCQUE4QjtDQUM5QixtQkFBbUI7QUFDcEI7O0FBRUE7Q0FDQyxTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxrQkFBa0I7QUFDbkI7QUFDQTtDQUNDLGdCQUFnQjtDQUNoQixVQUFVO0NBQ1YsU0FBUztDQUNULGFBQWE7Q0FDYixTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxPQUFPO0NBQ1AsYUFBYTtBQUNkO0FBQ0E7Q0FDQyxlQUFlO0FBQ2hCOztBQUVBLG9CQUFvQjtBQUNwQjtDQUNDLHlCQUF5QjtDQUN6QixZQUFZO0NBQ1osYUFBYTtDQUNiLGVBQWU7Q0FDZixZQUFZO0VBQ1g7O0VBRUEsa0VBQWtFO0VBQ2xFO0NBQ0Qsa0JBQWtCO0NBQ2xCLHFCQUFxQjtFQUNwQjs7RUFFQSx5Q0FBeUM7RUFDekM7Q0FDRCxhQUFhO0NBQ2Isa0JBQWtCO0NBQ2xCLHlCQUF5QjtDQUN6QixnQkFBZ0I7Q0FDaEIsNENBQTRDO0NBQzVDLFVBQVU7RUFDVDs7RUFFQSw4QkFBOEI7RUFDOUI7Q0FDRCxZQUFZO0NBQ1osa0JBQWtCO0NBQ2xCLHFCQUFxQjtDQUNyQixjQUFjO0VBQ2I7O0VBRUEsNENBQTRDO0VBQzVDLDJCQUEyQixzQkFBc0IsQ0FBQzs7RUFFbEQsb0NBQW9DO0VBQ3BDLG1DQUFtQyxjQUFjLENBQUM7O0VBRWxELDBGQUEwRjtFQUMxRiwwQkFBMEIseUJBQXlCLENBQUM7Ozs7RUFJcEQsSUFBSTs7QUFFTjtDQUNDLGFBQWE7Q0FDYixzQkFBc0I7Q0FDdEIsU0FBUzs7QUFFVjs7QUFFQTtDQUNDLHVCQUF1QjtDQUN2QixrQkFBa0I7Q0FDbEIsYUFBYTtDQUNiLGVBQWU7QUFDaEI7O0FBRUE7Q0FDQyx5QkFBeUI7Q0FDekIsWUFBWTtDQUNaLGtCQUFrQjtDQUNsQixlQUFlO0NBQ2YscUJBQXFCO0NBQ3JCLGVBQWU7Q0FDZixZQUFZO0NBQ1osa0JBQWtCO0FBQ25CO0FBQ0E7Q0FDQyxhQUFhO0NBQ2IsOEJBQThCO0NBQzlCLG1CQUFtQjtDQUNuQixnQkFBZ0I7QUFDakI7QUFDQTtDQUNDLHlCQUF5QjtDQUN6QixZQUFZO0NBQ1osa0JBQWtCO0NBQ2xCLGVBQWU7Q0FDZixlQUFlO0NBQ2YsZUFBZTtDQUNmLFlBQVk7Q0FDWixrQkFBa0I7QUFDbkI7O0FBRUE7Q0FDQyxTQUFTO0FBQ1ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuXFx0bWFyZ2luOiAwO1xcblxcdHBhZGRpbmc6IDA7XFxuXFx0bWluLWhlaWdodDogMTAwdmg7XFxuXFx0d2lkdGg6IDEwMCU7XFxuXFx0Zm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuaGVhZGVyIHtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcblxcdGNvbG9yOiAjZmZmO1xcblxcdHBhZGRpbmc6IDFyZW07XFxuXFx0ZGlzcGxheTogZmxleDtcXG5cXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuXFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuaGVhZGVyID4gaDEge1xcblxcdG1hcmdpbjogMDtcXG59XFxuXFxuaGVhZGVyID4gbmF2IHtcXG5cXHRtYXJnaW4tcmlnaHQ6IDVyZW07XFxufVxcbmhlYWRlciA+IG5hdiA+IHVsIHtcXG5cXHRsaXN0LXN0eWxlOiBub25lO1xcblxcdHBhZGRpbmc6IDA7XFxuXFx0bWFyZ2luOiAwO1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0Z2FwOiAxcmVtO1xcbn1cXG5cXG4jY29udGVudCB7XFxuXFx0ZmxleDogMTtcXG5cXHRwYWRkaW5nOiAxcmVtO1xcbn1cXG4jYWRkLXByb2plY3QtYnV0dG9uIHtcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi8qIERyb3Bkb3duIEJ1dHRvbiAqL1xcbi5kcm9wYnRuLCAjYWRkLXByb2plY3QtYnV0dG9uIHtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDRBQTZEO1xcblxcdGNvbG9yOiB3aGl0ZTtcXG5cXHRwYWRkaW5nOiAxNnB4O1xcblxcdGZvbnQtc2l6ZTogMTZweDtcXG5cXHRib3JkZXI6IG5vbmU7XFxuICB9XFxuICBcXG4gIC8qIFRoZSBjb250YWluZXIgPGRpdj4gLSBuZWVkZWQgdG8gcG9zaXRpb24gdGhlIGRyb3Bkb3duIGNvbnRlbnQgKi9cXG4gIC5kcm9wZG93biB7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcblxcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIH1cXG4gIFxcbiAgLyogRHJvcGRvd24gQ29udGVudCAoSGlkZGVuIGJ5IERlZmF1bHQpICovXFxuICAuZHJvcGRvd24tY29udGVudCB7XFxuXFx0ZGlzcGxheTogbm9uZTtcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcXG5cXHRtaW4td2lkdGg6IDE2MHB4O1xcblxcdGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xcblxcdHotaW5kZXg6IDE7XFxuICB9XFxuICBcXG4gIC8qIExpbmtzIGluc2lkZSB0aGUgZHJvcGRvd24gKi9cXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xcblxcdGNvbG9yOiBibGFjaztcXG5cXHRwYWRkaW5nOiAxMnB4IDE2cHg7XFxuXFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcbiAgfVxcbiAgXFxuICAvKiBDaGFuZ2UgY29sb3Igb2YgZHJvcGRvd24gbGlua3Mgb24gaG92ZXIgKi9cXG4gIC5kcm9wZG93bi1jb250ZW50IGE6aG92ZXIge2JhY2tncm91bmQtY29sb3I6ICNkZGQ7fVxcbiAgXFxuICAvKiBTaG93IHRoZSBkcm9wZG93biBtZW51IG9uIGhvdmVyICovXFxuICAuZHJvcGRvd246aG92ZXIgLmRyb3Bkb3duLWNvbnRlbnQge2Rpc3BsYXk6IGJsb2NrO31cXG4gIFxcbiAgLyogQ2hhbmdlIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBkcm9wZG93biBidXR0b24gd2hlbiB0aGUgZHJvcGRvd24gY29udGVudCBpcyBzaG93biAqL1xcbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wYnRuIHtiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO31cXG5cXG5cXG5cXG4gIC8qICovXFxuXFxuLmFkZC1wcm9qZWN0LWZvcm0ge1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXHRnYXA6IDFyZW07XFxuXFxufVxcblxcbi50YXNrLWNvbnRhaW5lciwgLm5ldy10YXNrLWZvcm0ge1xcblxcdGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcblxcdGJvcmRlci1yYWRpdXM6IDVweDtcXG5cXHRkaXNwbGF5OiBncmlkO1xcblxcdHBhZGRpbmc6IDAuNXJlbTtcXG59XFxuXFxuLm5ldy10YXNrLWJ1dHRvbiB7IFxcblxcdGJhY2tncm91bmQtY29sb3I6ICMwNEFBNkQ7XFxuXFx0Y29sb3I6IHdoaXRlO1xcblxcdHBhZGRpbmc6IDEwcHggMjBweDtcXG5cXHRmb250LXNpemU6IDE2cHg7XFxuXFx0LyogbWFyZ2luOiA0cHggMnB4OyAqL1xcblxcdGN1cnNvcjogcG9pbnRlcjtcXG5cXHRib3JkZXI6IG5vbmU7XFxuXFx0Ym9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG4uYWRkLXRhc2stYnV0dG9ucy1jb250YWluZXIge1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFx0bWFyZ2luLXRvcDogMXJlbTtcXG59XFxuYnV0dG9uIHtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDRBQTZEO1xcblxcdGNvbG9yOiB3aGl0ZTtcXG5cXHRwYWRkaW5nOiAxMHB4IDIwcHg7XFxuXFx0Zm9udC1zaXplOiAxNnB4O1xcblxcdG1hcmdpbjogNHB4IDJweDtcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxuXFx0Ym9yZGVyOiBub25lO1xcblxcdGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLm5ldy10YXNrLWJ1dHRvbiB7XFxuXFx0bWFyZ2luOiAwO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdO1xuICAgIH1cbiAgICAjY2hlY2tJZkV4aXN0cyh0YXNrVGl0bGUpIHtcbiAgICAgICAgdGhpcy50YXNrcy5mb3JFYWNoKCh0KSA9PiB7XG4gICAgICAgICAgICBpZiAodC50aXRsZSA9PT0gdGFza1RpdGxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgYWRkVGFzayh0YXNrKSB7XG4gICAgICAgIGlmICh0aGlzLiNjaGVja0lmRXhpc3RzKHRhc2sudGl0bGUpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50YXNrcy5wdXNoKHRhc2spO1xuICAgIH1cblxuICAgIHJlbW92ZVRhc2sodGFza1RpdGxlKSB7XG4gICAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcigodCkgPT4gdC50aXRsZSAhPT0gdGFza1RpdGxlKTtcbiAgICB9XG5cbiAgICBnZXRUYXNrKHRhc2tUaXRsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maW5kKCh0KSA9PiB0LnRpdGxlID09PSB0YXNrVGl0bGUpO1xuICAgIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgVG9kbyB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbm90ZXMsIGNoZWNrbGlzdCkge1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgICB0aGlzLm5vdGVzID0gbm90ZXM7XG4gICAgICAgIHRoaXMuY2hlY2tsaXN0ID0gY2hlY2tsaXN0O1xuICAgIH1cbiAgICBnZXQgYXR0cmlidXRlcygpe1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIGR1ZURhdGU6IHRoaXMuZHVlRGF0ZSxcbiAgICAgICAgICAgIHByaW9yaXR5OiB0aGlzLnByaW9yaXR5LFxuICAgICAgICAgICAgbm90ZXM6IHRoaXMubm90ZXMsXG4gICAgICAgICAgICBjaGVja2xpc3Q6IHRoaXMuY2hlY2tsaXN0XG4gICAgICAgIH07XG4gICAgXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmV3UHJvamVjdChwcm9qZWN0VGl0bGUpIHtcbiAgICByZXR1cm4gbmV3IFByb2plY3QocHJvamVjdFRpdGxlKTtcbn1cblxuXG4iLCJpbXBvcnQgeyBUb2RvIH0gZnJvbSAnLi9wcm9qZWN0cy5qcyc7XG5cblxuXG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRQcm9qZWN0VG9Ecm9wZG93bihwcm9qZWN0KSB7XG4gICAgY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd24tY29udGVudCcpO1xuICAgIGNvbnN0IG5ld1Byb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgbmV3UHJvamVjdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgZGlzcGxheVByb2plY3QocHJvamVjdCk7XG4gICAgfSk7XG4gICAgbmV3UHJvamVjdC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgYCR7cHJvamVjdC50aXRsZX0tZHJvcGRvd25gKTsgLy8gVXNpbmcgYmFja3RpY2tzIGZvciB0ZW1wbGF0ZSBsaXRlcmFsc1xuICAgIG5ld1Byb2plY3Quc2V0QXR0cmlidXRlKCdocmVmJywgJyMnKTtcbiAgICBuZXdQcm9qZWN0LmlubmVySFRNTCA9IHByb2plY3QudGl0bGU7XG4gICAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQobmV3UHJvamVjdCk7XG59XG5cblxuZnVuY3Rpb24gYWRkTmV3VGFza0J1dHRvbihwcm9qZWN0LCBwcm9qZWN0Q29udGFpbmVyKSB7XG4gICAgY29uc3QgbmV3VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIG5ld1Rhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdjbGFzcycsICduZXctdGFzay1idXR0b24nKTtcbiAgICBuZXdUYXNrQnV0dG9uLmlubmVySFRNTCA9IFwiTmV3IFRhc2tcIjtcblxuICAgIG5ld1Rhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIG5ld1Rhc2tCdXR0b24ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuZXdUYXNrQnV0dG9uKTtcblxuICAgICAgICBjb25zdCBuZXdUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIG5ld1Rhc2suc2V0QXR0cmlidXRlKCdjbGFzcycsICd0YXNrLWNvbnRhaW5lcicpXG5cbiAgICAgICAgY29uc3QgbmV3VGFza0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgICAgIG5ld1Rhc2tGb3JtLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnbmV3LXRhc2stZm9ybScpO1xuXG4gICAgICAgIGNvbnN0IG5ld1Rhc2tUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgY29uc3QgbmV3VGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgY29uc3QgbmV3VGFza0R1ZURhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2tEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgY29uc3QgbmV3VGFza1ByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBjb25zdCBuZXdUYXNrUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBjb25zdCBuZXdUYXNrRGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7IFxuICAgICAgICBjb25zdCBuZXdUYXNrTm90ZXNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2tOb3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2tDaGVja2xpc3RMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2tDaGVja2xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBjb25zdCBidXR0b25zQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGNvbnN0IGFkZFRhc2tCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cbiAgICAgICAgbmV3VGFza1RpdGxlTGFiZWwuaW5uZXJIVE1MID0gXCJUaXRsZTogXCI7ICBcbiAgICAgICAgbmV3VGFza1RpdGxlLnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCAnJyk7XG4gICAgICAgIG5ld1Rhc2tEdWVEYXRlTGFiZWwuaW5uZXJIVE1MID0gXCJEdWUgRGF0ZSAoWVlZWS1NTS1ERCk6IFwiO1xuICAgICAgICBuZXdUYXNrRHVlRGF0ZS5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgJycpO1xuICAgICAgICBuZXdUYXNrRHVlRGF0ZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuICAgICAgICBuZXdUYXNrRHVlRGF0ZS5zZXRBdHRyaWJ1dGUoJ3BhdHRlcm4nLCAnXFxkezR9LVxcZHsyfS1cXGR7Mn0nKTtcbiAgICAgICAgbmV3VGFza1ByaW9yaXR5TGFiZWwuaW5uZXJIVE1MID0gXCJQcmlvcml0eTogXCI7XG4gICAgICAgIG5ld1Rhc2tQcmlvcml0eS5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgJycpO1xuICAgICAgICBuZXdUYXNrRGVzY3JpcHRpb25MYWJlbC5pbm5lckhUTUwgPSBcIkRlc2NyaXB0aW9uOiBcIjtcbiAgICAgICAgbmV3VGFza05vdGVzTGFiZWwuaW5uZXJIVE1MID0gXCJOb3RlczogXCI7XG4gICAgICAgIG5ld1Rhc2tDaGVja2xpc3RMYWJlbC5pbm5lckhUTUwgPSBcIkNoZWNrbGlzdDogXCI7XG4gICAgICAgIGFkZFRhc2tCdXR0b24uaW5uZXJIVE1MID0gXCJBZGQgVGFza1wiO1xuICAgICAgICBhZGRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdzdWJtaXQnKTtcbiAgICAgICAgY2FuY2VsQnV0dG9uLmlubmVySFRNTCA9IFwiQ2FuY2VsXCI7XG5cbiAgICAgICAgYnV0dG9uc0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZC10YXNrLWJ1dHRvbnMtY29udGFpbmVyJyk7XG4gICAgICAgIGNhbmNlbEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2NhbmNlbC1idXR0b24nKTtcbiAgICAgICAgYWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZC10YXNrLWJ1dHRvbicpO1xuXG4gIFxuICAgICAgICBuZXdUYXNrRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBuZXdQcm9qZWN0VGFzayA9IG5ldyBUb2RvKFxuICAgICAgICAgICAgICAgIG5ld1Rhc2tUaXRsZS52YWx1ZSxcbiAgICAgICAgICAgICAgICBuZXdUYXNrRGVzY3JpcHRpb24udmFsdWUsXG4gICAgICAgICAgICAgICAgbmV3VGFza0R1ZURhdGUudmFsdWUsXG4gICAgICAgICAgICAgICAgbmV3VGFza1ByaW9yaXR5LnZhbHVlLFxuICAgICAgICAgICAgICAgIG5ld1Rhc2tOb3Rlcy52YWx1ZSxcbiAgICAgICAgICAgICAgICBuZXdUYXNrQ2hlY2tsaXN0LnZhbHVlLnNwbGl0KCcsJylcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIFNhdmUgdGhlIG5ldyB0YXNrIHRvIHRoZSBsb2NhbCBzdG9yYWdlXG4gICAgICAgICAgICBjb25zdCBqc29uRGF0YVN0cmluZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHByb2plY3QudGl0bGUpO1xuICAgICAgICAgICAgY29uc3QganNvbkRhdGEgPSBKU09OLnBhcnNlKGpzb25EYXRhU3RyaW5nKTtcbiAgICAgICAgICAgIGpzb25EYXRhLnRhc2tzLnB1c2gobmV3UHJvamVjdFRhc2spO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0ocHJvamVjdC50aXRsZSwgSlNPTi5zdHJpbmdpZnkoanNvbkRhdGEpKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcHJvamVjdC5hZGRUYXNrKG5ld1Byb2plY3RUYXNrKTtcbiAgICAgICAgICAgIHByb2plY3RDb250YWluZXIucmVtb3ZlQ2hpbGQobmV3VGFzayk7XG4gICAgICAgICAgICBkaXNwbGF5UHJvamVjdChwcm9qZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHByb2plY3RDb250YWluZXIucmVtb3ZlQ2hpbGQobmV3VGFzayk7XG4gICAgICAgICAgICBwcm9qZWN0Q29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1Rhc2tCdXR0b24pO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgIGJ1dHRvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkVGFza0J1dHRvbik7XG4gICAgICAgIGJ1dHRvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICAgICAgbmV3VGFza0Zvcm0uYXBwZW5kQ2hpbGQobmV3VGFza1RpdGxlTGFiZWwpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrVGl0bGUpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrRHVlRGF0ZUxhYmVsKTtcbiAgICAgICAgbmV3VGFza0Zvcm0uYXBwZW5kQ2hpbGQobmV3VGFza0R1ZURhdGUpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrUHJpb3JpdHlMYWJlbCk7XG4gICAgICAgIG5ld1Rhc2tGb3JtLmFwcGVuZENoaWxkKG5ld1Rhc2tQcmlvcml0eSk7XG4gICAgICAgIG5ld1Rhc2tGb3JtLmFwcGVuZENoaWxkKG5ld1Rhc2tEZXNjcmlwdGlvbkxhYmVsKTtcbiAgICAgICAgbmV3VGFza0Zvcm0uYXBwZW5kQ2hpbGQobmV3VGFza0Rlc2NyaXB0aW9uKTtcbiAgICAgICAgbmV3VGFza0Zvcm0uYXBwZW5kQ2hpbGQobmV3VGFza05vdGVzTGFiZWwpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrTm90ZXMpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrQ2hlY2tsaXN0TGFiZWwpO1xuICAgICAgICBuZXdUYXNrRm9ybS5hcHBlbmRDaGlsZChuZXdUYXNrQ2hlY2tsaXN0KTtcbiAgICAgICAgbmV3VGFza0Zvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uc0NvbnRhaW5lcik7XG4gICAgICAgIG5ld1Rhc2suYXBwZW5kQ2hpbGQobmV3VGFza0Zvcm0pO1xuICAgICAgICBwcm9qZWN0Q29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1Rhc2spO1xuICAgIH0pO1xuICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kQ2hpbGQobmV3VGFza0J1dHRvbik7XG59XG5cblxuLy8gVGhpcyBmdW5jdGlvbiB3aWxsIGRpc3BsYXkgdGhlIG5hbWUgb2YgdGhlIHByb2plY3QgYW5kIGl0cyB0YXNrcyBpbiB0aGUgRE9NXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheVByb2plY3QocHJvamVjdCkge1xuICAgIGNvbnN0IHByb2plY3RzQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKTtcbiAgICBwcm9qZWN0c0NvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgcHJvamVjdFRpdGxlLnN0eWxlID0gYFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYDtcbiAgICBwcm9qZWN0VGl0bGUuaW5uZXJIVE1MID0gcHJvamVjdC50aXRsZTtcblxuICAgIHByb2plY3RzQ29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3RUaXRsZSk7XG4gICAgXG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHByb2plY3RDb250YWluZXIuc3R5bGUgPSBgXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGU6IGF1dG8gLyByZXBlYXQoNCwgMWZyKTtcbiAgICAgICAgZ2FwOiAxcmVtO1xuICAgIGA7XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9qZWN0LnRhc2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGFzay5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2stY29udGFpbmVyJyk7XG4gICAgICAgIGNvbnN0IHJlbW92ZVRhc2tCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgY29uc3Qgc2VlVGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBjb25zdCBlZGl0VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgIGNvbnN0IHRhc2tEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICBjb25zdCB0YXNrUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7IFxuXG4gICAgICAgIHRhc2tUaXRsZS5pbm5lckhUTUwgPSBwcm9qZWN0LnRhc2tzW2ldLnRpdGxlO1xuICAgICAgICB0YXNrRHVlRGF0ZS5pbm5lckhUTUwgPSBcIkR1ZSBkYXRlOiBcIiArIHByb2plY3QudGFza3NbaV0uZHVlRGF0ZTtcbiAgICAgICAgdGFza1ByaW9yaXR5LmlubmVySFRNTCA9IFwiUHJpb3JpdHk6IFwiICsgcHJvamVjdC50YXNrc1tpXS5wcmlvcml0eTtcbiAgICAgICAgcmVtb3ZlVGFza0J1dHRvbi5pbm5lckhUTUwgPSBcIlJlbW92ZVwiO1xuICAgICAgICBzZWVUYXNrQnV0dG9uLmlubmVySFRNTCA9IFwiU2VlXCI7XG4gICAgICAgIGVkaXRUYXNrQnV0dG9uLmlubmVySFRNTCA9IFwiRWRpdFwiO1xuXG4gICAgICAgIHNlZVRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdjbGFzcycsICdzZWUtdGFzay1idXR0b24nKTtcbiAgICAgICAgcmVtb3ZlVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3JlbW92ZS10YXNrLWJ1dHRvbicpO1xuICAgICAgICBlZGl0VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2VkaXQtdGFzay1idXR0b24nKTtcblxuICAgICAgICByZW1vdmVUYXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgcHJvamVjdC5yZW1vdmVUYXNrKHRhc2tUaXRsZS5pbm5lckhUTUwpO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0ocHJvamVjdC50aXRsZSkpO1xuICAgICAgICAgICAgY29uc3QgdGFza3MgPSBkYXRhLnRhc2tzO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGFza3MpO1xuICAgICAgICAgICAgdGFza3Muc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0ocHJvamVjdC50aXRsZSwgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAgICAgICAgICAgcHJvamVjdENvbnRhaW5lci5yZW1vdmVDaGlsZCh0YXNrKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlZVRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB0YXNrLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICBjb25zdCB0YXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICBjb25zdCB0YXNrRHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tOb3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tDaGVja2xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICBjb25zdCBoaWRlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cbiAgICAgICAgICAgIHRhc2tUaXRsZS5pbm5lckhUTUwgPSBcIlRpdGxlOiBcIiArIHByb2plY3QudGFza3NbaV0udGl0bGU7XG4gICAgICAgICAgICB0YXNrRGVzY3JpcHRpb24uaW5uZXJIVE1MID0gXCJEZXNjcmlwdGlvbjogXCIgKyBwcm9qZWN0LnRhc2tzW2ldLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGFza0R1ZURhdGUuaW5uZXJIVE1MID0gXCJEdWUgZGF0ZTogXCIgKyBwcm9qZWN0LnRhc2tzW2ldLmR1ZURhdGU7XG4gICAgICAgICAgICB0YXNrUHJpb3JpdHkuaW5uZXJIVE1MID0gXCJQcmlvcml0eTogXCIgKyBwcm9qZWN0LnRhc2tzW2ldLnByaW9yaXR5O1xuICAgICAgICAgICAgdGFza05vdGVzLmlubmVySFRNTCA9IFwiTm90ZXM6IFwiICsgcHJvamVjdC50YXNrc1tpXS5ub3RlcztcbiAgICAgICAgICAgIHRhc2tDaGVja2xpc3QuaW5uZXJIVE1MID0gXCJDaGVja2xpc3Q6IFwiICsgcHJvamVjdC50YXNrc1tpXS5jaGVja2xpc3Q7XG4gICAgICAgICAgICBoaWRlQnV0dG9uLmlubmVySFRNTCA9IFwiSGlkZVwiO1xuXG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEZXNjcmlwdGlvbik7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza1ByaW9yaXR5KTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza05vdGVzKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza0NoZWNrbGlzdCk7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKGhpZGVCdXR0b24pO1xuXG4gICAgICAgICAgICBoaWRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRhc2suaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XG4gICAgICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRHVlRGF0ZSk7XG4gICAgICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHkpO1xuICAgICAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQoc2VlVGFza0J1dHRvbik7XG4gICAgICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChlZGl0VGFza0J1dHRvbik7XG4gICAgICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChyZW1vdmVUYXNrQnV0dG9uKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBlZGl0VGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHRhc2suaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBjb25zdCBuZXdUYXNrRHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tQcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBjb25zdCBuZXdUYXNrRGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgICAgICBjb25zdCBuZXdUYXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgY29uc3QgbmV3VGFza05vdGVzTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICAgICAgY29uc3QgbmV3VGFza05vdGVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2tDaGVja2xpc3RMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgICAgICBjb25zdCBuZXdUYXNrQ2hlY2tsaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgICAgIGNvbnN0IHNhdmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXG4gICAgICAgICAgICBuZXdUYXNrVGl0bGUudmFsdWUgPSBwcm9qZWN0LnRhc2tzW2ldLnRpdGxlO1xuICAgICAgICAgICAgbmV3VGFza0R1ZURhdGUudmFsdWUgPSBwcm9qZWN0LnRhc2tzW2ldLmR1ZURhdGU7XG4gICAgICAgICAgICBuZXdUYXNrUHJpb3JpdHkudmFsdWUgPSBwcm9qZWN0LnRhc2tzW2ldLnByaW9yaXR5O1xuICAgICAgICAgICAgbmV3VGFza0Rlc2NyaXB0aW9uLnZhbHVlID0gcHJvamVjdC50YXNrc1tpXS5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgIG5ld1Rhc2tOb3Rlcy52YWx1ZSA9IHByb2plY3QudGFza3NbaV0ubm90ZXM7XG4gICAgICAgICAgICBuZXdUYXNrQ2hlY2tsaXN0LnZhbHVlID0gcHJvamVjdC50YXNrc1tpXS5jaGVja2xpc3Q7XG5cbiAgICAgICAgICAgIG5ld1Rhc2tUaXRsZUxhYmVsLmlubmVySFRNTCA9IFwiVGl0bGU6IFwiO1xuICAgICAgICAgICAgbmV3VGFza0R1ZURhdGVMYWJlbC5pbm5lckhUTUwgPSBcIkR1ZSBEYXRlOiBcIjtcbiAgICAgICAgICAgIG5ld1Rhc2tQcmlvcml0eUxhYmVsLmlubmVySFRNTCA9IFwiUHJpb3JpdHk6IFwiO1xuICAgICAgICAgICAgbmV3VGFza0Rlc2NyaXB0aW9uTGFiZWwuaW5uZXJIVE1MID0gXCJEZXNjcmlwdGlvbjogXCI7XG4gICAgICAgICAgICBuZXdUYXNrTm90ZXNMYWJlbC5pbm5lckhUTUwgPSBcIk5vdGVzOiBcIjtcbiAgICAgICAgICAgIG5ld1Rhc2tDaGVja2xpc3RMYWJlbC5pbm5lckhUTUwgPSBcIkNoZWNrbGlzdDogXCI7XG4gICAgICAgICAgICBzYXZlQnV0dG9uLmlubmVySFRNTCA9IFwiU2F2ZVwiO1xuICAgICAgICAgICAgY2FuY2VsQnV0dG9uLmlubmVySFRNTCA9IFwiQ2FuY2VsXCI7XG5cbiAgICAgICAgICAgIHNhdmVCdXR0b24uc2V0QXR0cmlidXRlKCdjbGFzcycsICdzYXZlLWJ1dHRvbicpO1xuICAgICAgICAgICAgY2FuY2VsQnV0dG9uLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnY2FuY2VsLWJ1dHRvbicpO1xuXG4gICAgICAgICAgICBzYXZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByb2plY3QucmVtb3ZlVGFzayh0YXNrVGl0bGUuaW5uZXJIVE1MKTtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdQcm9qZWN0VGFzayA9IG5ldyBUb2RvKFxuICAgICAgICAgICAgICAgICAgICBuZXdUYXNrVGl0bGUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIG5ld1Rhc2tEZXNjcmlwdGlvbi52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmV3VGFza0R1ZURhdGUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIG5ld1Rhc2tQcmlvcml0eS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmV3VGFza05vdGVzLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBuZXdUYXNrQ2hlY2tsaXN0LnZhbHVlLnNwbGl0KCcsJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHByb2plY3QuYWRkVGFzayhuZXdQcm9qZWN0VGFzayk7XG4gICAgICAgICAgICAgICAgZGlzcGxheVByb2plY3QocHJvamVjdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5UHJvamVjdChwcm9qZWN0KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKG5ld1Rhc2tUaXRsZUxhYmVsKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza1RpdGxlKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza0R1ZURhdGVMYWJlbCk7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKG5ld1Rhc2tEdWVEYXRlKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza1ByaW9yaXR5TGFiZWwpO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChuZXdUYXNrUHJpb3JpdHkpO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChuZXdUYXNrRGVzY3JpcHRpb25MYWJlbCk7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKG5ld1Rhc2tEZXNjcmlwdGlvbik7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKG5ld1Rhc2tOb3Rlc0xhYmVsKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza05vdGVzKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza0NoZWNrbGlzdExhYmVsKTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQobmV3VGFza0NoZWNrbGlzdCk7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHNhdmVCdXR0b24pO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZChjYW5jZWxCdXR0b24pO1xuICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHkpO1xuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHNlZVRhc2tCdXR0b24pO1xuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKGVkaXRUYXNrQnV0dG9uKTtcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZChyZW1vdmVUYXNrQnV0dG9uKTtcbiAgICAgICAgcHJvamVjdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrKTtcbiAgICB9XG5cbiAgICBhZGROZXdUYXNrQnV0dG9uKHByb2plY3QsIHByb2plY3RDb250YWluZXIpO1xuICAgIHByb2plY3RDb250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdwcm9qZWN0LWNvbnRhaW5lcicpO1xuICAgIHByb2plY3RzQ29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3RDb250YWluZXIpO1xufVxuXG5cblxuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgeyBhZGRQcm9qZWN0VG9Ecm9wZG93biB9IGZyb20gJy4vRE9NX21hbmlwdWxhdGlvbi5qcyc7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSAnLi9wcm9qZWN0cy5qcyc7XG5cblxuXG5cbmNvbnN0IGFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkLXByb2plY3QtYnV0dG9uJyk7XG5jb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZC1wcm9qZWN0LWZvcm0nKTtcbmNvbnN0IGNsb3NlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlLW5ldy1wcm9qZWN0LWJ1dHRvbicpOyBcbmNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtcHJvamVjdC1kaWFsb2cnKTtcbmNvbnN0IHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3QtdGl0bGUnKTtcbmFkZFByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgZGlhbG9nLnNob3dNb2RhbCgpO1xufSk7XG5cbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAodGl0bGUudmFsdWUgPT09ICcnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbmV3UHJvamVjdCA9IG5ldyBQcm9qZWN0KHRpdGxlLnZhbHVlKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aXRsZS52YWx1ZSwgSlNPTi5zdHJpbmdpZnkobmV3UHJvamVjdCkpO1xuICAgIGFkZFByb2plY3RUb0Ryb3Bkb3duKG5ld1Byb2plY3QpO1xuICAgIGRpYWxvZy5jbG9zZSgpO1xuICAgIGZvcm0ucmVzZXQoKTtcbn0pOyBcbmNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGRpYWxvZy5jbG9zZSgpO1xufSk7XG5cblxuY29uc3QgZGF0YSA9IE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSk7XG5kYXRhLmZvckVhY2goKGtleSkgPT4ge1xuICAgIGNvbnN0IHByb2plY3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICAgIGNvbnN0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChwcm9qZWN0LnRpdGxlKTtcbiAgICBuZXdQcm9qZWN0LnRhc2tzID0gcHJvamVjdC50YXNrcztcbiAgICBhZGRQcm9qZWN0VG9Ecm9wZG93bihuZXdQcm9qZWN0KTtcbn0pO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsIlByb2plY3QiLCJjb25zdHJ1Y3RvciIsInRpdGxlIiwidGFza3MiLCJ0YXNrVGl0bGUiLCJmb3JFYWNoIiwidCIsImFkZFRhc2siLCJ0YXNrIiwicmVtb3ZlVGFzayIsImZpbHRlciIsImdldFRhc2siLCJmaW5kIiwiVG9kbyIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5Iiwibm90ZXMiLCJjaGVja2xpc3QiLCJhZGRQcm9qZWN0VG9Ecm9wZG93biIsInByb2plY3QiLCJwcm9qZWN0TGlzdCIsIm5ld1Byb2plY3QiLCJhZGRFdmVudExpc3RlbmVyIiwiZGlzcGxheVByb2plY3QiLCJpbm5lckhUTUwiLCJwcm9qZWN0c0NvbnRhaW5lciIsImdldEVsZW1lbnRCeUlkIiwicHJvamVjdFRpdGxlIiwicHJvamVjdENvbnRhaW5lciIsInJlbW92ZVRhc2tCdXR0b24iLCJzZWVUYXNrQnV0dG9uIiwiZWRpdFRhc2tCdXR0b24iLCJ0YXNrRHVlRGF0ZSIsInRhc2tQcmlvcml0eSIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJ0YXNrRGVzY3JpcHRpb24iLCJ0YXNrTm90ZXMiLCJ0YXNrQ2hlY2tsaXN0IiwiaGlkZUJ1dHRvbiIsIm5ld1Rhc2tUaXRsZUxhYmVsIiwibmV3VGFza1RpdGxlIiwibmV3VGFza0R1ZURhdGVMYWJlbCIsIm5ld1Rhc2tEdWVEYXRlIiwibmV3VGFza1ByaW9yaXR5TGFiZWwiLCJuZXdUYXNrUHJpb3JpdHkiLCJuZXdUYXNrRGVzY3JpcHRpb25MYWJlbCIsIm5ld1Rhc2tEZXNjcmlwdGlvbiIsIm5ld1Rhc2tOb3Rlc0xhYmVsIiwibmV3VGFza05vdGVzIiwibmV3VGFza0NoZWNrbGlzdExhYmVsIiwibmV3VGFza0NoZWNrbGlzdCIsInNhdmVCdXR0b24iLCJjYW5jZWxCdXR0b24iLCJ2YWx1ZSIsIm5ld1Byb2plY3RUYXNrIiwic3BsaXQiLCJuZXdUYXNrQnV0dG9uIiwibmV3VGFzayIsIm5ld1Rhc2tGb3JtIiwiYnV0dG9uc0NvbnRhaW5lciIsImFkZFRhc2tCdXR0b24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwianNvbkRhdGFTdHJpbmciLCJqc29uRGF0YSIsImFkZE5ld1Rhc2tCdXR0b24iLCJhZGRQcm9qZWN0QnV0dG9uIiwiZGlhbG9nIiwic2hvd01vZGFsIiwiY2xvc2UiLCJyZXNldCIsImtleXMiXSwic291cmNlUm9vdCI6IiJ9